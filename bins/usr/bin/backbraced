#!/usr/bin/python3

import time, os, sys

print("[*] init backbraced")
if os.path.exists("/var/mobile/Media/stopuntether.txt"):
    sys.exit(-1)

os.system("launchctl list | grep backboardd > /tmp/.back")

hash1 = hash(open("/tmp/.back", "r").read())
if len(open("/tmp/.back", "r").read()) < 4:
	hash1=0
hash2 = hash(open("/tmp/.back", "r").read())
if len(open("/tmp/.back", "r").read()) < 4:
	hash2=0
d = 0

def check():
	global d, hash1, hash2
	if hash1 != hash2 and hash1 != 0 and hash2 != 0:
		print("[*] patching")
		os.system("/usr/bin/dajb")
		print("[*] respringing")
		os.system("killall backboardd")
		print("[*] patch2")
		os.system("/usr/bin/dajb")
		print("[*] done")
		time.sleep(30)
		os.system("launchctl list | grep backboardd > /tmp/.back")
		hash1 = hash(open("/tmp/.back", "r").read())
		hash2 = hash1
		d = 1

while True:
	print(0,hash1, hash2)
	if not d:
		os.system("launchctl list | grep backboardd > /tmp/.back")
		hash1 = hash(open("/tmp/.back", "r").read())
		if len(open("/tmp/.back", "r").read()) < 4:
			hash1=0
	time.sleep(0.5)
	d = 0
	print(1,hash1, hash2)
	check()
	print(2,hash1, hash2)
	if not d:
		os.system("launchctl list | grep backboardd > /tmp/.back")
		hash2 = hash(open("/tmp/.back", "r").read())
		if len(open("/tmp/.back", "r").read()) < 4:
			hash2=0
	check()
	print(3,hash1, hash2)
